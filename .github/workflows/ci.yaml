---
name: build-and-test
on: [push]
jobs:
  static-analysis:
    name: Run static analysis
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v3
    - name: Setup | Prerequisites
      run: "sudo bash -c 'apt update && DEBIAN_FRONTEND=noninteractive apt install -y curl'"
    - name: Setup | Rust
      run: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    - name: Setup | Rust Nightly
      run: "rustup install nightly && rustup default nightly"
    - name: Setup | Code Formatter
      run: "rustup update && rustup component add rustfmt"
    - name: Setup | Linter
      run: "rustup update && rustup component add clippy"
    - name: Code Format Check | App
      run: "cargo +nightly fmt -- --check --config-path ./"
    - name: Lint | App
      run: "cargo clippy -- -D warnings"

  build:
    needs: static-analysis
    name: Build and run tests
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v3
    - name: Setup | Prerequisites
      run: "sudo bash -c 'apt update && DEBIAN_FRONTEND=noninteractive apt install -y curl'"
    - name: Setup | Rust
      run: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    - name: Setup | Rust Nightly
      run: "rustup install nightly && rustup default nightly"
    - name: Setup | LLVM Tooling
      run: "rustup component add llvm-tools-preview"
    - name: Setup | LLVM helper
      run: "cargo install cargo-binutils && rustup component add llvm-tools-preview"
    - name: Build Release | App
      run: "cargo build --release"
    - name: Build Debug | App
      run: "LLVM_PROFILE_FILE='profiler_output.profraw' RUSTFLAGS='-C instrument-coverage' cargo build"
    - name: Tests | App
      run: './.github/workflows/test_with_coverage.bash "$(pwd)" &> ./small_test_coverage_report.txt && cat ./small_test_coverage_report.txt'
    - name: Store code coverage report | App
      uses: actions/upload-artifact@v3
      with:
        name: small_test_coverage_report
        path: small_test_coverage_report.txt
        retention-days: 7
    - name: Store debug output | App
      uses: actions/upload-artifact@v3
      with:
        name: breadlog-debug
        path: target/debug/breadlog
        retention-days: 7
    - name: Store release output | App
      uses: actions/upload-artifact@v3
      with:
        name: breadlog-release
        path: target/release/breadlog
        retention-days: 7
